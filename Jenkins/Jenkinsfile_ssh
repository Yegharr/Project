def remote = [:]
remote.name = "servers"
remote.host = "192.168.20.14"
remote.allowAnyHosts = true


pipeline {
    agent any
stages {
        stage('Build step') {
            steps {
                script {
                withCredentials([string(credentialsId:'docker_user', variable:'DOCKER_USER'),
                                string(credentialsId:'docker_pass',variable:'DOCKER_PASS')]) {
                sh "echo ${DOCKER_PASS} | docker login --username ${DOCKER_USER}  --password-stdin"
                docker.withRegistry("https://index.docker.io") {
                def customImage = docker.build("${DOCKER_USER}/nginx:${env.BUILD_ID}", "-f nginx/Dockerfile .")
                customImage.push()
                }
                }
            }
        }
    }
        stage("Run step") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'ssh_user', passwordVariable: 'password', usernameVariable: 'userName')]) {
                    remote.user = userName
                    remote.password = password
                    sshCommand remote: remote, command: '''
                        if docker ps -a | grep 'test_container'; then
                        docker rm  test_container -f 
                        fi '''

                    sshCommand remote: remote, command: "docker run -tid -p 80:80 --name test_container yegharr/nginx:${env.BUILD_ID}"
                    sh " docker rmi yegharr/nginx:${env.BUILD_ID}  ubuntu:latest -f "
                    }
                }
            }
        }
    }
}
